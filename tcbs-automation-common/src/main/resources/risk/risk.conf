risk {
  domain = ${risk.risk-domain}"/tc-data-risk/v1/"
  domainInternalV1 = ${risk.risk-domain}"/tc-data-risk/v1/"
  domainPublicV1 = ${risk.risk-domain}"/tc-data-risk/p/v1/"
  domainImpactV1 = ${risk.risk-domain}"/iris-event-impact/v1/"
  domainIrisBondV1 = ${risk.risk-domain}"/tcbs-iris-bond/v1/"

  riskConditionUrl {
    getAllRiskConditionsUrl = "config/condition"
    updateRiskConditionUrl = "config/condition"
  }
  riskComAllowUrl {
    getRiskComAllowUrl = "config/num_comp"
    updateRiskComAllowUrl = "config/num_comp"
    deleteRiskComAllowUrl = "config/num_comp"
  }
  riskConfig {
    getRiskConfigUrl = "config/config"
    updateRiskConfigUrl = "config/config"
  }
  riskMarginUrl {
    checkList = "margin/check_list"
  }
  marginLog {
    getMarginLog = "margin_log/logs"
  }
  margin {
    x-api-key = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiAiaHR0cHM6Ly9kYXRhcG93ZXIudGNicy5jb20udm4iLCAic3ViIjogInRjYnMtZGF0YS1yaXNrIiwgImlhdCI6IDE2MDM3MTE2ODQsICJleHAiOiAxOTE5MDcxNjg0fQ.RwHWr0isWEneVq-jv2gBff_PWBIfGozH9QwQGUcD_e00cJU6sGVz_uT69p7UmyLX53kCkXNFmkbLRsUmy-AscAhjAiyHU4IutpySw9XtUZR5mHfpVPM85hNFyn1ix0-hHreZB9rlyNaSgUsWFq5FlI0k_u_u3geMHrUjmAQtLbza1KuK_LE1XaoJJMa94JkCkL_kTbquOR4pT_5N_x4b519l5jghB82JIodo7VFsdrpUdyjTIFXRbp8Ule82zRpUlmW_MfxhCDRCtg88wLJ6YFQtI_brWVRpRwxy-dfJ6OpCbagtQeQ7US4zjzA3v4rAs6bmBBzJkTJzgcAVKJVC_A"
    getReviewMarginUrl = "review_margin"
    getAllowedTickerListUrl = "margin/get_allowed_ticker_list"
    getWeeklyTickerListUrl = "margin/get_margin_weekly_review_ticker_list"
    getEstimatedFullListUrl = "review_margin/estimated_full_list"
  }
  assignmentInfo{
    getAllAssignment="assign/assignments"
    getAlTickers="assign/get_all_tickers"
    postAssignmentUrl = "assign/assignments"
    reviewMarginUrl = "review_margin/final"
    assignTaskUrl = "assign/task"
  }
  basket {
    basket = "basket"
    basketConfig = "basket/config"
    basketFlex = "basket/flex"
  }
  process{
    process = "bpm_process"
  }
  closePriceAdjust {
   closePriceAdjust = "review_margin/sync"
  }
  log {
     log = "review_margin/log"
    }
    addTicker {
         addTicker = "margin/margin_review_with_ticker_list"
        }

       sync00120023 {
              sync00120023 = "review_margin/sync_012_023"
             }

    removeTicker {
     getRemoveTicker = "review_margin/list_ticker_remove"
    }

    updateBlackList
    {
    updateBlackList = "review_margin/update_black_list"
    }
    uploadFileExcel
    {
    uploadFileExcel = "post_web/upload_file"
    }
     getEffectiveDate
        {
        getEffectiveDate = "working_date/flex_validated_date"
        }
    syncMa5{
        syncMa5 = "review_margin/sync_ma_5"
        }
  crm {
    crmGetUrl = "https://tcbs--sit.my.salesforce.com"
    getAllResultUrl = "/services/data/v53.0/query/"
    authCRMUrl = "https://test.salesforce.com/services/oauth2/token"
    postMarginCRMUrl = "crm/post_margin"
    postMarginCRMExchangeUrl = "crm/post_remove_margin"

  }
  getWorkingDate{
  getWorkingDate = "working_date/check_working_date"
  }
  addWorkingDate{
    addWorkingDate = "working_date"
    }

    impact{
    getTickerChange = "review_margin/review_changed"
    syncCus = "impact_assessment/sync_customer"
    syncStock = "impact_assessment/sync_stock"
    postCrm = "crm/post_affected"
    getRtt = "crm/post_affected"
    getDetailBonusShare = "get-customer-right-detail"
    getImpactDataValid = "check-impact-data-valid"
    }
    impactDaily
    {
    postDaily01Cus = "impact_assessment/sync_customer_daily_tracking"
    postDaily02Stock = "impact_assessment/sync_stock_daily_tracking"
    postDaily03CalculrateRtt = "rtt-calculate-daily-tracking"
    }

    fin5{
    getIndicator = "fin5/indicators"
    }
    monitor{
        checkValid = "margin_data/check_valid"
        manager = "margin_data/manager"
        }
    impactDaily{
            calDataInput = "rtt-calculated-data-input"
            updateDataInput = "update-rtt-calculated-data-input"
            }
    venus{
         syncData = "credit_risk/async_data"
         checkDraft = "credit_risk/check_draft"
         syncLoanData = "credit_risk/async_loan_data"
    }
    coco{
    updateDwh = "review_margin/update_dwh"
    postNotify = "margin_notify"
    }
    expireDate{
    expireDate = "expire_date"
    calExpireDate = "expire_date/calculate"
    }
    bond{
        configLimitAll = "config_limit/all"
        configLimit = "config_limit"
        cashMovement = "cash/movement"
        syncVenus = "corp/bond/sync"
    }
    pv01{
        curve = "interest_rate_risk/curve"
    }
}